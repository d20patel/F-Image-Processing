#light





namespace ImageLibrary
  module Operations = begin
    val _TupleRGB : a:'a -> b:'b -> c:'c -> 'a * 'b * 'c
    val _TheGray : theList:(int * int * int) list -> (int * int * int) list
    val _GrayLists :
      theList:(int * int * int) list list -> (int * int * int) list list
    val Grayscale :
      width:int ->
        height:int ->
          depth:int ->
            image:(int * int * int) list list -> (int * int * int) list list
    val _ThresholdCheck :
      a:'a -> b:'a -> c:'a -> theThreshold:'a -> theDepth:int -> int * int * int
        when 'a : comparison
    val _IterateTuple :
      theList:('a * 'a * 'a) list ->
        theThreshold:'a -> theDepth:int -> (int * int * int) list
        when 'a : comparison
    val _IterateList :
      theList:('a * 'a * 'a) list list ->
        theThreshold:'a -> theDepth:int -> (int * int * int) list list
        when 'a : comparison
    val Threshold :
      width:int ->
        height:int ->
          depth:int ->
            image:(int * int * int) list list ->
              threshold:int -> (int * int * int) list list
    val _IterateFlip : theList:('a * 'b * 'c) list -> ('a * 'b * 'c) list
    val _IterateFlips :
      theList:('a * 'b * 'c) list list -> ('a * 'b * 'c) list list
    val FlipHorizontal :
      width:int ->
        height:int ->
          depth:int ->
            image:(int * int * int) list list -> (int * int * int) list list
    val EdgeDetect :
      width:int ->
        height:int ->
          depth:int ->
            image:(int * int * int) list list ->
              threshold:int -> (int * int * int) list list
    val RotateRight90 :
      width:int ->
        height:int ->
          depth:int ->
            image:(int * int * int) list list -> (int * int * int) list list
  end

